{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","Pages/Allquote.jsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","module","exports","QuoteItem","props","className","classes","item","text","author","to","pathname","id","QuoteList","console","log","History","useHistory","Location","useLocation","Asc","URLSearchParams","search","get","List","quotes","sort","value1","value2","sorting","onClick","push","list","map","quote","NoQuotesFound","noquotes","Allquote","useHttp","getAllQuotes","sendRequest","data","status","error","useEffect","LoadingSpinner","length"],"mappings":"6LAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,mBIJ9FC,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wGCkBdC,EAhBG,SAAAC,GAChB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,WAAD,OAAaP,EAAMQ,KAAQP,UAAU,MAAzD,iC,iBCuCSQ,EA7CG,SAAAT,GAChBU,QAAQC,IAAIX,GACZ,IAAMY,EAAUC,cACVC,EAAWC,cAEXC,EAA4B,QADpB,IAAIC,gBAAgBH,EAASI,QACzBC,IAAI,QAClBC,EAAO,GAETA,EADEJ,EACKhB,EAAMqB,OAAOC,MAAK,SAACC,EAAQC,GAChC,OAAOD,EAAOf,GAAKgB,EAAOhB,GAAK,GAAK,KAG/BR,EAAMqB,OAAOC,MAAK,SAACC,EAAQC,GAChC,OAAOD,EAAOf,GAAKgB,EAAOhB,GAAK,GAAK,KAaxC,OACE,eAAC,WAAD,WACE,qBAAKP,UAAWC,IAAQuB,QAAxB,SACE,yBAAQC,QAZI,WAChBd,EAAQe,KAAK,CACXpB,SAAS,GAAD,OAAKO,EAASP,UACtBW,OAAQ,mBAAcF,EAAM,OAAS,UASnC,iBAAiCA,EAAM,OAAS,WAElD,oBAAIf,UAAWC,IAAQ0B,KAAvB,SACGR,EAAKS,KAAI,SAAAC,GAAK,OACb,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVH,OAAQyB,EAAMzB,OACdD,KAAM0B,EAAM1B,MAHP0B,EAAMtB,a,yBC1BRuB,EAXO,WACpB,OACE,sBAAK9B,UAAWC,IAAQ8B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAM/B,UAAU,MAAMK,GAAG,aAAzB,6B,QCsBS2B,UAlBE,WACf,MAA6CC,YAAQC,KAAc,GAA3DC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,OAAQC,EAAnC,EAAmCA,MAInC,OAHAC,qBAAU,WACRJ,MACC,CAACA,IACW,YAAXE,EAEA,mBAAGrC,UAAU,YAAb,SACE,cAACwC,EAAA,EAAD,MAGFF,EAAc,mBAAGtC,UAAU,mBAAb,SAAiCsC,IAE9CA,GAAoB,cAAXD,GAA0C,IAAhBD,EAAKK,OAEtC,cAAC,EAAD,CAAWrB,OAAM,YAAMgB,KADrB,cAAC,EAAD","file":"static/js/5.fc23fdc5.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__CT7O6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2cG8w\",\"sorting\":\"QuoteList_sorting__3n5HF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3u2ow\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = props => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={{ pathname: `/quotes/${props.id}` }} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = props => {\n  console.log(props);\n  const History = useHistory();\n  const Location = useLocation();\n  const query = new URLSearchParams(Location.search);\n  const Asc = query.get('sort') === 'Asc';\n  let List = [];\n  if (Asc) {\n    List = props.quotes.sort((value1, value2) => {\n      return value1.id > value2.id ? 1 : -1;\n    });\n  } else {\n    List = props.quotes.sort((value1, value2) => {\n      return value1.id < value2.id ? 1 : -1;\n    });\n  }\n  // console.log(List);\n  const ascending = () => {\n    History.push({\n      pathname: `${Location.pathname}`,\n      search: `?sort=` + `${Asc ? 'Desc' : 'Asc'}`,\n    });\n    // two ways to change or push our route\n    // History.push(`${Location.pathname}?sort=` + `${Asc ? 'Desc' : 'Asc'}`);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={ascending}>Add {Asc ? 'Desc' : 'Asc'}</button>\n      </div>\n      <ul className={classes.list}>\n        {List.map(quote => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from 'react';\r\nimport useHttp from '../components/Hooks/use-http';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport { getAllQuotes } from '../components/Lib/api';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nlet DUMMY_QUOTE = [\r\n  { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\r\n  { id: 'q2', author: 'Maximilian', text: 'Learning React is great!' },\r\n];\r\n\r\nconst Allquote = () => {\r\n  const { sendRequest, data, status, error } = useHttp(getAllQuotes, true);\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n  if (status === 'pending')\r\n    return (\r\n      <p className=\" centered\">\r\n        <LoadingSpinner />\r\n      </p>\r\n    );\r\n  if (error) return <p className=\"focused centered\">{error}</p>;\r\n\r\n  if (!error && status === 'completed' && data.length === 0)\r\n    return <NoQuotesFound />;\r\n  return <QuoteList quotes={[...data]}></QuoteList>;\r\n};\r\n\r\nexport default Allquote;\r\n"],"sourceRoot":""}