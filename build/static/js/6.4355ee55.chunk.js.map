{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","Pages/Newquote.jsx"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEnter","setisEnter","when","message","location","pathname","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","Newquote","useHttp","addQuote","sendRequest","status","History","useHistory","useEffect","push","data"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBC6D/BC,EAzDG,SAAAL,GAChB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAA8BE,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OACE,mCACE,eAAC,EAAD,WACE,cAAC,IAAD,CACEC,KAAMF,EACNG,QAAS,SAAAC,GAAQ,4BAAmBA,EAASC,aAG/C,uBACEC,QAfM,WACZL,GAAW,IAeLV,UAAWC,IAAQe,KACnBC,SA1BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBf,EAAegB,QAAQC,MACvCC,EAAchB,EAAac,QAAQC,MAGzCvB,EAAMyB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAgB5C,UAKGxB,EAAM4B,WACL,qBAAK3B,UAAWC,IAAQ2B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK7B,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK7B,OAEtC,sBAAKL,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK3B,OAEpC,qBAAKP,UAAWC,IAAQmC,QAAxB,SACE,wBAAQC,QA/BH,WACb3B,GAAW,IA8BsBV,UAAU,MAAnC,kC,gBC/BGsC,UAlBE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAChBC,qBAAU,WACO,cAAXH,GAAwBC,EAAQG,KAAK,aACxC,CAACJ,EAAQC,IAKZ,OACE,cAAC,EAAD,CACEhB,UAAsB,YAAXe,EACXlB,WAPoB,SAAAuB,GACtBN,EAAYM","file":"static/js/6.4355ee55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1LdvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1NgK8\",\"loading\":\"QuoteForm_loading__oJIJS\",\"control\":\"QuoteForm_control__edC-2\",\"actions\":\"QuoteForm_actions__2Q5HZ\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport { Link, Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = props => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEnter, setisEnter] = useState(false);\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const Focus = () => {\n    setisEnter(true);\n  };\n  const finish = () => {\n    setisEnter(false);\n  };\n  return (\n    <>\n      <Card>\n        <Prompt\n          when={isEnter}\n          message={location => `DO YOU KNOW ${location.pathname}`}\n        />\n\n        <form\n          onFocus={Focus}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finish} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../components/Hooks/use-http';\r\nimport { addQuote } from '../components/Lib/api';\r\nconst Newquote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const History = useHistory();\r\n  useEffect(() => {\r\n    if (status === 'completed') History.push('/quotes');\r\n  }, [status, History]);\r\n  const addQuoteHandler = data => {\r\n    sendRequest(data);\r\n  };\r\n  // console.log(status);\r\n  return (\r\n    <QuoteForm\r\n      isLoading={status === 'pending' ? true : false}\r\n      onAddQuote={addQuoteHandler}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Newquote;\r\n"],"sourceRoot":""}